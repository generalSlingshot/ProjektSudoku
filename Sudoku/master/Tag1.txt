/*
   ========================================================================
   Autor       : Team 3
   Firma       : HHBKSudokuSoft AG
   Dateiname   : Sudoku.c
   Datum       : 23.04.2018
   Beschreibung: Die Hauptdatei des Sudokuprogramms.
   Compiler    : Visual Studio 2012 Compiler
   Version     : 1.0
   Programmschnittstelle: int main(void)
                          Das Programm gibt den Wert 0 oder 1 zurueck.
                          Das Programm erwartet beim Aufruf keine Argumente
   ========================================================================
*/
#define _CRT_SECURE_NO_DEPRECATE 1

/*
   ========================================================================
   Include Dateien
   ========================================================================
*/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "sqlite3.h"

/*
   ========================================================================
   Defines
   ========================================================================
*/
#define LEICHT 1
#define MITTEL 2
#define SCHWER 3

#define SUDOKU_WIN 1
#define SUDOKU_LOSE 0

#define HAUPTMENUE_SPIEL 1
#define HAUPTMENUE_REGEL 2
#define HAUPTMENUE_LISTE 3
#define HAUPTMENUE_LOGOUT 4
#define HAUPTMENUE_END 0

#define STARTMENUE_LOGIN 1
#define STARTMENUE_REGISTER 2
#define STARTMENUE_END 0

#define NAME_MAX 20
#define PASSWORT_MAX 20

#define TRUE 1
#define FALSE 0

#define NICHT_GESETZT -1
#define ZEIT_MAX 8

#define DATABASE_FILE "sudoku.sqlite3"

/*
   ========================================================================
   Structdefinitionen
   ========================================================================
*/
typedef struct {
	char sNutzername[NAME_MAX];
	char sSpielzeit[ZEIT_MAX];
	int iSchwierigkeit;
} Bestenlisteneintrag;

typedef struct Nutzer {
	char sNutzername[NAME_MAX];
	char sVorname[NAME_MAX];
	char sNachname[NAME_MAX];
	char sPasswort[PASSWORT_MAX];
} Nutzer;

/*
   ========================================================================
   Prototypen
   ========================================================================
*/
int StartMenue(void); // Chung
void RegistrierungMenue(void); // Henning
void LoginMenue(void); // Omar
int HauptMenue(void); // Sven
int SchwierigkeitMenue(void); // Chung
void Regelwerk(void); // Sven
void Bestenliste(); // Tom
void Abmelden(void);
void liesBestenlisteneintraege(void);
int SudokuSpiel(int schwierigkeitsgrad);
int** InitSudoku(int schwierigkeitsgrad);
void fillBestenlisteneintraege(void* data, int argColumn, char** argVertical, char** columnName);

/*
   ========================================================================
   Funktion main()
   ========================================================================
*/
int main(void) {
	int iRueckgabeStart = -1;
	int iRueckgabeHauptMenue = -1;
	int iSchwierigkeitsgrad = -1;
	do {
		iRueckgabeStart = StartMenue();
		if (iRueckgabeStart == STARTMENUE_LOGIN) {
			LoginMenue();
		}
		else if (iRueckgabeStart == STARTMENUE_REGISTER) {
			RegistrierungMenue();
		}
		else if (iRueckgabeStart != STARTMENUE_END) {
			do {
				iRueckgabeHauptMenue = HauptMenue();
				if (iRueckgabeHauptMenue == HAUPTMENUE_SPIEL) {
					iSchwierigkeitsgrad = SchwierigkeitMenue();
					SudokuSpiel(iSchwierigkeitsgrad);
				}
				else if (iRueckgabeHauptMenue == HAUPTMENUE_REGEL) {
					Regelwerk();
				}
				else if (iRueckgabeHauptMenue == HAUPTMENUE_LISTE) {
					Bestenliste();
				}
			} while (iRueckgabeHauptMenue != HAUPTMENUE_LOGOUT);
		}
	} 
	while(iRueckgabeStart != STARTMENUE_END);
	return 0;
}

void Bestenliste() {
	liesBestenlisteneintraege();
}

void liesBestenlisteneintraege() {
	sqlite3 *db_handle;
	int rc;
	Bestenlisteneintrag eintraege[3][10];
	char sql[] = "SELECT A.Nutzer, A.Spielzeit, B.Programmwert FROM Bestenliste AS A "
				 "LEFT JOIN Schwierigkeit AS B "
				 "ON A.Schwierigkeit = B.ID "
				 "ORDER BY B.Programmwert, A.Spielzeit;";
	
	rc =  sqlite3_open(DATABASE_FILE, &db_handle);
	if (rc != SQLITE_OK) {
		sqlite3_close(db_handle);
		exit(-1);
	}

	
	rc = sqlite3_exec(db_handle, sql, *fillBestenlisteneintraege, NULL, NULL);
}

void fillBestenlisteneintraege(void* data, int maxCol, char** value, char** columnName) {
	char sNutzername[NAME_MAX];
	char sSpielzeit[ZEIT_MAX];
	int iSchwierigkeit;
	if (maxCol == 3) {
		return;
	}
	Bestenlisteneintrag* eintraege = (Bestenlisteneintrag*) data;
	strcpy(sNutzername, (char*)value++);
	strcpy(sSpielzeit, (char*)value++);
	iSchwierigkeit = atoi((char*)value++);

	struct Bestenlisteneintrag

}

 void fillEintrag(Bestenlisteneintrag* data, int curCol, char** value, char** columnName) {
	
 }